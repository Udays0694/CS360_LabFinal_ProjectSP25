{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:5000',\n  // Your backend server URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Automatically add token if available\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Fetch products from the backend\nexport const fetchProducts = async () => {\n  try {\n    const response = await axiosInstance.get('/products');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\n\n// Register a new user\nexport const registerUser = async userData => {\n  try {\n    const response = await axiosInstance.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\n// Login user\nexport const loginUser = async userData => {\n  try {\n    const response = await axiosInstance.post('/auth/login', userData);\n    const {\n      token\n    } = response.data;\n    if (token) {\n      localStorage.setItem('authToken', token); // Store token in local storage\n      axiosInstance.defaults.headers.Authorization = `Bearer ${token}`; // Attach token to future requests\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\n// Logout user\nexport const logoutUser = () => {\n  localStorage.removeItem('authToken'); // Remove token from storage\n  delete axiosInstance.defaults.headers.Authorization; // Remove token from headers\n};\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","fetchProducts","response","get","data","error","console","registerUser","userData","post","loginUser","setItem","defaults","logoutUser","removeItem"],"sources":["C:/xampp/htdocs/CS360_LabProject(Final)/plant_ecommerce_frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:5000', // Your backend server URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Automatically add token if available\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Fetch products from the backend\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await axiosInstance.get('/products');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error registering user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Login user\r\nexport const loginUser = async (userData) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/login', userData);\r\n    const { token } = response.data;\r\n    \r\n    if (token) {\r\n      localStorage.setItem('authToken', token); // Store token in local storage\r\n      axiosInstance.defaults.headers.Authorization = `Bearer ${token}`; // Attach token to future requests\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error logging in:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem('authToken'); // Remove token from storage\r\n  delete axiosInstance.defaults.headers.Authorization; // Remove token from headers\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,aAAa,CAACc,GAAG,CAAC,WAAW,CAAC;IACrD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMb,aAAa,CAACoB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;IACrE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG,MAAOF,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMb,aAAa,CAACoB,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;IAClE,MAAM;MAAEX;IAAM,CAAC,GAAGK,QAAQ,CAACE,IAAI;IAE/B,IAAIP,KAAK,EAAE;MACTC,YAAY,CAACa,OAAO,CAAC,WAAW,EAAEd,KAAK,CAAC,CAAC,CAAC;MAC1CR,aAAa,CAACuB,QAAQ,CAACpB,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;IACpE;IAEA,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAGA,CAAA,KAAM;EAC9Bf,YAAY,CAACgB,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;EACtC,OAAOzB,aAAa,CAACuB,QAAQ,CAACpB,OAAO,CAACQ,aAAa,CAAC,CAAC;AACvD,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}